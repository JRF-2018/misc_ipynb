name: Deploy Content (README and Notebooks) to GitHub Pages

on:
  push:
    branches:
      - master # Adjust to your default branch (main or master)
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository # Checkout the repository where this workflow file resides
      uses: actions/checkout@v3 # Using v3 as per your recent success

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install jupyter nbconvert pandocfilters # pandocfilters is often needed for nbconvert
        # Install pandoc which is required for markdown to html conversion
        sudo apt-get update && sudo apt-get install -y pandoc

    - name: Prepare Pages Content
      run: |
        mkdir public # Create the public directory for GitHub Pages
        
        # 1. Convert README.md to index.html
        if [ -f "README.md" ]; then
          echo "Converting README.md to index.html..."
          pandoc README.md -o public/index.html --standalone --metadata title="Repository Home" --from gfm
          echo "Generated public/index.html from README.md"

          # IMPORTANT: Rewrite .ipynb links to .html links in index.html
          echo "Rewriting .ipynb links to .html in public/index.html..."
          sed -i 's/\.ipynb"/\.html"/g' public/index.html
          echo "Rewriting complete."
        else
          echo "Warning: README.md not found. Skipping index.html generation."
        fi
        
        # 2. Convert all .ipynb files to HTML
        shopt -s nullglob # Expands to nothing if no matches
        for notebook_file in *.ipynb; do
          if [ -f "$notebook_file" ]; then
            echo "Converting $notebook_file to HTML..."
            jupyter nbconvert --to html "$notebook_file" --output-dir public/
          else
            echo "No .ipynb files found in the repository root. Skipping notebook conversion."
          fi
        done
        shopt -u nullglob # Turn off nullglob
        
        # Debugging logs
        echo "--- Contents of public directory for upload ---"
        ls -R public/
        echo "-----------------------------------------------"
        
        if [ -z "$(ls -A public/)" ]; then
          echo "Error: public directory is empty! No content to upload."
          exit 1
        fi

    - name: Upload Pages Artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './public'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
